name: Prepare mitmproxy flows

on:
  workflow_call:
  workflow_dispatch:

jobs:
  lookup:
    name: Look up cached mitmproxy flows
    runs-on: ubuntu-latest
    outputs:
      cache-hit: ${{ steps.cache-flows-restore.outputs.cache-hit }}
      cache-primary-key: ${{ steps.cache-flows-restore.outputs.cache-primary-key }}
    steps:
    - uses: actions/checkout@v4
    - name: Restore flows cache
      uses: actions/cache/restore@v4
      id: cache-flows-restore
      with:
        path: mitmproxy/flows
        key: ${{ runner.os }}-mitmproxy-${{ hashFiles('tests/remotes.txt') }}
        lookup-only: true

  generate:
    name: Generate mitmproxy flows
    runs-on: ubuntu-latest
    needs: lookup
    if: needs.lookup.outputs.cache-hit != 'true'
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
    - uses: Swatinem/rust-cache@v2
    - name: Initialize mitmdump
      run: |
        pipx install mitmproxy
        mitmdump -w mitmproxy/flows &
    - run: cargo build
    - name: Generate flows
      continue-on-error: true
      env:
        ALL_PROXY: http://127.0.0.1:8080
      run: cargo run -- --cert "$HOME/.mitmproxy/mitmproxy-ca-cert.pem" get $(cat 'tests/remotes.txt' | tr '\n' ' ')
    - name: Save flows cache
      uses: actions/cache/save@v4
      with:
        path: mitmproxy/flows
        key: ${{ needs.lookup.outputs.cache-primary-key }}
